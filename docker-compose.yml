services:
  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092" # for client connections
      - "9101:9101" # JMX
    restart: unless-stopped
    networks:
      - ewm-net
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      interval: 20s
      timeout: 5s
      retries: 5

  kafka-init-topics:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-init-topics
    depends_on:
      - kafka
    command: "bash -c \
                'kafka-topics --create --topic stats.user-actions.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092 && \
                kafka-topics --create --topic stats.events-similarity.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092'"
    init: true

  discovery-server:
    build: infra/discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - ewm-net
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8761/actuator/health || exit 1" ]
      timeout: 5s
      interval: 5s
      retries: 5

  config-server:
    build: infra/config-server
    container_name: config-server
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SERVER_PORT=0
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - EUREKA_HOSTNAME = config-server
      - STATS_DB_HOSTNAME = stats-db
      - USER_DB_HOSTNAME = user-db
      - EVENT_DB_HOSTNAME = event-db
      - REQUEST_DB_HOSTNAME = request-db
      - COMMENT_DB_HOSTNAME = comment-db
      - ANALYZER_DB_HOSTNAME = analyzer-db
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      interval: 20s
      timeout: 5s
      retries: 5

  user-service:
    build: core/user-service
    container_name: user-service
    depends_on:
      user-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/userDb
      - SPRING_DATASOURCE_USERNAME=dbuser
      - SPRING_DATASOURCE_PASSWORD=12345
      - EUREKA_USER_HOSTNAME = user-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      timeout: 5s
      interval: 25s
      retries: 10

  user-db:
    image: postgres:16.1
    container_name: postgres-user-db
    networks:
      - ewm-net
    environment:
      - POSTGRES_PASSWORD=12345
      - POSTGRES_USER=dbuser
      - POSTGRES_DB=userDb
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15



  event-service:
    build: core/event-service
    container_name: event-service
    depends_on:
      config-server:
        condition: service_healthy
      user-service:
        condition: service_healthy
      event-db:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://event-db:5432/eventDb
      - SPRING_DATASOURCE_USERNAME=dbuser
      - SPRING_DATASOURCE_PASSWORD=12345
      - EUREKA_EVENT_HOSTNAME = event-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      timeout: 5s
      interval: 25s
      retries: 10

  event-db:
    image: postgres:16.1
    container_name: postgres-event-db
    networks:
      - ewm-net
    environment:
      - POSTGRES_PASSWORD=12345
      - POSTGRES_USER=dbuser
      - POSTGRES_DB=eventDb
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  request-service:
    build: core/request-service
    container_name: request-service
    depends_on:
      config-server:
        condition: service_healthy
      user-service:
        condition: service_healthy
      event-service:
        condition: service_healthy
      request-db:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://request-db:5432/requestDb
      - SPRING_DATASOURCE_USERNAME=dbuser
      - SPRING_DATASOURCE_PASSWORD=12345
      - EUREKA_REQUEST_HOSTNAME = request-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      timeout: 5s
      interval: 25s
      retries: 10

  request-db:
    image: postgres:16.1
    container_name: postgres-ewm-request-db
    networks:
      - ewm-net
    environment:
      - POSTGRES_PASSWORD=12345
      - POSTGRES_USER=dbuser
      - POSTGRES_DB=requestDb
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  comment-service:
    build: core/comment-service
    container_name: comment-service
    depends_on:
      comment-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
      event-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://comment-db:5432/commentDb
      - SPRING_DATASOURCE_USERNAME=dbuser
      - SPRING_DATASOURCE_PASSWORD=12345
      - EUREKA_COMMENT_HOSTNAME = comment-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      timeout: 5s
      interval: 25s
      retries: 10

  comment-db:
    image: postgres:16.1
    container_name: postgres-comment-db
    networks:
      - ewm-net
    environment:
      - POSTGRES_PASSWORD=12345
      - POSTGRES_USER=dbuser
      - POSTGRES_DB=commentDb
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  collector:
    build: stats/collector
    container_name: collector
    depends_on:
      kafka:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      timeout: 5s
      interval: 25s
      retries: 10

  aggregator:
    build: stats/aggregator
    container_name: aggregator
    depends_on:
      kafka:
        condition: service_healthy
      collector:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      timeout: 5s
      interval: 25s
      retries: 10

  analyzer:
    build: stats/analyzer
    container_name: analyzer
    depends_on:
      kafka:
        condition: service_healthy
      collector:
        condition: service_healthy
      aggregator:
        condition: service_healthy
      config-server:
        condition: service_healthy
      analyzer-db:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SPRING_DATASOURCE_URL=jdbc:postgresql://analyzer-db:5432/analyzerDb
      - SPRING_DATASOURCE_USERNAME=dbuser
      - SPRING_DATASOURCE_PASSWORD=12345
      - EUREKA_ANALYZER_HOSTNAME = analyzer
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      timeout: 5s
      interval: 25s
      retries: 10

  analyzer-db:
    image: postgres:16.1
    container_name: postgres-analyzer-db
    networks:
      - ewm-net
    environment:
      - POSTGRES_PASSWORD=12345
      - POSTGRES_USER=dbuser
      - POSTGRES_DB=analyzerDb
      - TZ=Europe/Moscow
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  gateway-server:
    build: infra/gateway-server
    container_name: gateway-server
    ports:
      - "8080:8080"
    depends_on:
      config-server:
        condition: service_healthy
      user-service:
        condition: service_healthy
      comment-service:
        condition: service_healthy
      request-service:
        condition: service_healthy
      event-service:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/




networks:
  ewm-net: